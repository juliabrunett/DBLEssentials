
;;; <summary>
;;; The main entry point for the application.
;;; </summary>
main Widgets

	.include "WND:windows.def"
	.include 'INC:header.def'
	.include 'INC:detail.def'
	
	; Number of Records to Allocate for
	.define D_INITIAL_ALLOC ,3
	.define D_INCR_ALLOC ,3

	record data
		ttchn ,i4 ,1
		var_input ,a1
		wndid ,i4 ; Main Menu
		wndid2 ,i4 ; Create Message
		wndid3 ,i4 ; Order Header
		wndid4 ,i4 ; Order Detail
		wndid5 ,i4 ; View Header
		message ,a28 
		height ,i2 ,15
		width ,i2 ,30
		row ,i2 ,9
		col ,i2 ,30
		wndtitle ,a20
		wndname1 ,a7, "Chose 1" ; could delete
		wndname2 ,a7 ,"Chose 2" ; could delete
		order_option ,a1
		menu ,i1 ,1
		i  ,d1 ; increment for the for loop

		handle ,i4 ; memory handle
		nmalloc ,i4 ; max stored
		nmloaded ,i4 ; currently stored

		chn1 ,i4 ; ISAM files
		chn2 ,i4 ; ISAM files

		result ,FileResult
		viewing_order ,d6

	endrecord

proc
	call startup
	call process
    call shutdown
	stop

startup,
	open(ttchn,O,"tt:")
	; initialize Synergy Windowing System with max 5 windows
	xcall w_init(1, ttchn, 5)

	; CREATE ISAM FILES ; header - 46
	xcall isamc("DAT:header.ism", 34, 1, "start=1,length=6,nodups,nomodify") ; key=order_num
	xcall isamc("DAT:detail.ism", 33, 1, "start=1:7,length=6:4,nodups,nomodify") ; key=order_num+item_num

	; Open files for update
	open(chn1,U:I,"DAT:header.ism")
	open(chn2,U:I,"DAT:detail.ism")



	; Initialize Dynamic Allocation
	nmalloc = D_INITIAL_ALLOC
	; Allocate dynamic memory sufficient to store 3 order detail lines
	handle = %mem_proc(DM_ALLOC, ^size(strDetail)*nmalloc)
	clear nmloaded ; clear currently stored

	return
process,
	; Create a new window for the application's main menu
	xcall CREATE_WINDOW(wndid, "WND4", height, width, 9, 30, "Order Processing Menu")
	; Display Options 
	xcall DISPLAY_TEXT(wndid, 2, 4, "1. Add an Order")
	xcall DISPLAY_TEXT(wndid, 4, 4, "2. View Last Order")
	xcall DISPLAY_TEXT(wndid, 6, 4, "3. Exit")

	do
	begin
		; Display Message that prompts to select one of available options
		xcall DISPLAY_TEXT(wndid, 8, 4, "Choose an option:")
		; Use Wait Key to prompt the user to selecta menu entry
		xcall WAIT_KEY(wndid, 0, 1, var_input)

		; Code to decode which character the user typed
		using var_input select
		("1"),
		;xcall DISPLAY_MESSAGE("You chose 1", wndid2, wndname1, width, col)
			call ORDER_HEADER
		("2"),
			
		;xcall DISPLAY_MESSAGE("You chose 2", wndid2, wndname2, width, col)
			call VIEW_ORDER

			
		(),
			xcall DISPLAY_MESSAGE("Invalid choice", wndid2, "INVALID", width, col)
			
		endusing
		
	end
	until(var_input.eqs."3")

	; Terminate the program
	xcall DELETE_WINDOW(wndid)

	return

shutdown,

	; close Synergy windowing
	xcall w_exit

	; Deallocate the dynamic memory
	handle = %mem_proc(DM_FREE, handle)

	; Close the ISAM channels
	close chn1
	close chn2

	return

; Internal Subroutine
ORDER_HEADER,
	; Create window for the order header inormation
	xcall CREATE_WINDOW(wndid3, "Order Header", height, width, 9, 30, "Add an Order: Header Details")

	do
	begin
		; Display appropriate prompts for all fields in header record
		xcall DISPLAY_TEXT(wndid3, 2, 4, "Order Number: ")
		xcall input(wndid3, 2, 20, header.oh_number,1,0,0)

		; NEEDS WORK
		if (%file_access(FileOp.Find,chn1,header,oh_number).eq.FileResult.OK)
		begin
			xcall DISPLAY_TEXT(wndid3, 8, 4, "Order # Already Exists")
			xcall input(wndid3, 2, 20, header.oh_number,1,0,0)

		end


		if(header.oh_number.eq.000000)
			return

		xcall DISPLAY_TEXT(wndid3, 3, 4, "Date:")
		xcall input(wndid3, 3, 20, header.oh_date,1,0,1)

		xcall DISPLAY_TEXT(wndid3, 4, 4, "Customer:")
		xcall input(wndid3, 4, 20, header.oh_customer,1,0,0)

		xcall DISPLAY_TEXT(wndid3, 5, 4, "Sales Rep Code:")
		xcall input(wndid3, 5, 20, header.oh_salesrep,1,0,0)

		xcall DISPLAY_TEXT(wndid3, 6, 4, "Contact:")
		xcall input(wndid3, 6, 20, header.oh_contact,1,0,0)

		result = %file_access(FileOp.Create,chn1,header)

		; Call clear box
		for i from 2 thru 6
			begin
				xcall CLEAR_BOX(wndid3, i, 20, i, 30)
			end

		;repeat
		begin
			if(nmloaded.ge.nmalloc) ; if need to resize
			begin
				nmalloc += D_INCR_ALLOC ; increment allocated min
				handle = %mem_proc(DM_RESIZ, ^size(strDetail)*nmalloc, handle) ; update handle
			end
			incr nmloaded ; add to currently stored

			; Call the order detail once the header details have been entered
			call ORDER_DETAIL
		end
		
	end
	; Keep accepting new orders until the user enters a blank oh_number (zero: decimal field)
	until(menu.eq.0)

	return

ORDER_DETAIL,
	; Create a window for the Order Detail
	xcall CREATE_WINDOW(wndid4, "Order Detail", height, width, 9, 30, "Add an Order: Order Details")

	;do
	begin
		; Display appropriate prompts for all of the fields in the detail structure
		xcall DISPLAY_TEXT(wndid4, 2, 4, "Order Number: ")
		;xcall input(wndid4, 2, 20, detail.od_number,1,0,0)
		xcall input(wndid4, 2, 20, ^m(strDetail[nmloaded].od_number, handle),1,0,0)

		xcall DISPLAY_TEXT(wndid4, 3, 4, "Item Number:")
		xcall input(wndid4, 3, 20, ^m(strDetail[nmloaded].od_item, handle),1,0,0)

		xcall DISPLAY_TEXT(wndid4, 4, 4, "Part Number:")
		xcall input(wndid4, 4, 20, 	^m(strDetail[nmloaded].od_part, handle),1,0,0)

		xcall DISPLAY_TEXT(wndid4, 5, 4, "Quantity:")
		xcall input(wndid4, 5, 20, ^m(strDetail[nmloaded].od_qty, handle),1,0,0)

		xcall DISPLAY_TEXT(wndid4, 6, 4, "Unit Price:")
		xcall input(wndid4, 6, 20, ^m(strDetail[nmloaded].od_unit_price, handle),1,0,0)

		; Call clear box
		for i from 2 thru 6
		begin
			xcall CLEAR_BOX(wndid4, i, 20, i, 30)
		end
	end
	;until(^m(strDetail[nmloaded].od_number,handle).eq.0)

	return

VIEW_ORDER,
	; Display order header window
	xcall CREATE_WINDOW(wndid5,"View Order", height, width, 9, 30, "View Order")
	; Prompt for an order number
	xcall DISPLAY_TEXT(wndid5, 2, 4, "Enter Order Num:")
	xcall input(wndid5, 2, 20, viewing_order,1,0,0)

	; Look up an order in the ISAM file and display details to window
	;result = %file_access(FileOp.Find,chn1,header,viewing_order)
	if(%file_access(FileOp.Find,chn1,header,viewing_order).eq.FileResult.OK) then
		xcall DISPLAY_TEXT(wndid5, 4,4, %string(header.oh_number))
	else
	begin
		xcall DISPLAY_TEXT(wndid5, 4,4, "File Not Found!")
		xcall DISPLAY_TEXT(wndid5, 5,4, "Press any key to return")

	end

	;FileOp.Read(chn1,header.oh_date)
	;FileOp.Read(chn1,header.oh_customer)
	;FileOp.Read(chn1,header.oh_salesrep)
	;FileOp.Read(chn1,header.oh_contact)


	; Wait for keypress
	xcall WAIT_KEY(wndid5,0,1,var_input)

	; Loop back and prompt for next order to be displayed (when blank, return to main menu)
	return

VIEW_ORDER_DETAILS,
	; Create and display an order detail window
	; Read all order detail records for the selected order & display each in turn into the window
	; Waiting for key press after each record
	; You don't have a detail record to read data into (structure), could use first element of dynamic mem as buffer for inpuy
	; When all detail lines have been displayed, remove detail window and return to view order header window
endmain