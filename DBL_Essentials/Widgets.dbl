
;;; <summary>
;;; The entry point for the application.
;;; </summary>
main

	.include "WND:windows.def"
	.include 'INC:header.def'
	.include 'INC:detail.def'
	
	; Number of Records to Allocate for
	.define D_INITIAL_ALLOC ,3
	.define D_INCR_ALLOC ,3

	record
		ttchn ,i4 ,1 ; Terminal Channel Number
		var_input ,a1 ; Input for menu options
		menu_wndid ,i4 ; Main Menu Window ID
		
		header_wndid3 ,i4 ; Order Header Window ID
		detail_wndid4 ,i4 ; Order Detail Window ID

		wndid5 ,i4 ; View Header
		wndid6 ,i4 ; Order Details
		chn1 ,i4 ; ISAM files - header
		chn2 ,i4 ; ISAM files - detail

		message ,a28 
		height ,i2 ,15
		width ,i2 ,30
		row ,i2 ,9
		col ,i2 ,30

		order_option ,a1
		menu ,i1 ,1
		i  ,d1 ; increment for the for loop

		handle ,i4 ; memory handle
		nmalloc ,i4 ; max stored
		nmloaded ,i4 ; currently stored

		result ,FileResult
		viewing_order ,d6

		; Variables from previous exercises:
		;wndid2 ,i4 ; Create Message
		;wndtitle ,a20
		;wndname1 ,a7, "Chose 1"
		;wndname2 ,a7 ,"Chose 2" 

	endrecord

proc
	call startup
	call process
    call shutdown
	stop

startup,
	open(ttchn,O,"tt:")
	; initialize Synergy Windowing System with max 5 windows
	xcall w_init(1, ttchn, 5)

	; CREATE ISAM FILES ; header - 46
	xcall isamc("DAT:header.ism", 34, 1, "start=1,length=6,nodups,nomodify") ; key=order_num
	xcall isamc("DAT:detail.ism", 33, 1, "start=1:7,length=6:4,nodups,nomodify") ; key=order_num+item_num

	; Open files for update
	open(chn1,U:I,"DAT:header.ism")
	open(chn2,U:I,"DAT:detail.ism")

	; Initialize Dynamic Allocation
	nmalloc = D_INITIAL_ALLOC
	; Allocate dynamic memory sufficient to store 3 order detail lines
	handle = %mem_proc(DM_ALLOC, ^size(strDetail)*nmalloc)
	clear nmloaded ; clear currently stored

	return
process,
	; Create a new window for the application's main menu
	xcall CREATE_WINDOW(menu_wndid, "WND4", height, width, 9, 30, "Order Processing Menu")
	; Display Options 
	xcall DISPLAY_TEXT(menu_wndid, 2, 4, "1. Add an Order")
	xcall DISPLAY_TEXT(menu_wndid, 4, 4, "2. View Last Order")
	xcall DISPLAY_TEXT(menu_wndid, 6, 4, "3. Exit")

	do
	begin
		; Display Message that prompts to select one of available options
		xcall DISPLAY_TEXT(menu_wndid, 8, 4, "Choose an option:")
		; Use Wait Key to prompt the user to select a menu entry
		xcall WAIT_KEY(menu_wndid, 0, 1, var_input)

		; Code to decode which character the user typed
		using var_input select
		("1"),
			;xcall DISPLAY_MESSAGE("You chose 1", wndid2, wndname1, width, col) ;previous exercise
			call ORDER_HEADER
		("2"),
			
			;xcall DISPLAY_MESSAGE("You chose 2", wndid2, wndname2, width, col) ;previous exercise
			call VIEW_ORDER
		;(),
			;xcall DISPLAY_MESSAGE("Invalid choice", wndid2, "INVALID", width, col) ;previous exercise
			
		endusing
		
	end
	until(var_input.eqs."3")

	; Terminate the program
	xcall DELETE_WINDOW(menu_wndid)

	return

shutdown,

	; close Synergy windowing
	xcall w_exit

	; Deallocate the dynamic memory
	handle = %mem_proc(DM_FREE, handle)

	; Close the ISAM channels
	close chn1
	close chn2

	return

; Internal Subroutine
ORDER_HEADER,
	; Create window for the order header information
	xcall CREATE_WINDOW(header_wndid3, "Order Header", height, width, 9, 30, "Add an Order: Header Details")

	do
	begin
		; Display appropriate prompts for all fields in header record
		xcall DISPLAY_TEXT(header_wndid3, 2, 4, "Order Number: ")
		xcall input(header_wndid3, 2, 20, header.oh_number,1,0,0)

		; NEEDS WORK
		if (%file_access(FileOp.Find,chn1,header,oh_number).eq.FileResult.OK)
		begin
			xcall DISPLAY_TEXT(header_wndid3, 8, 4, "Order # Already Exists")
			xcall input(header_wndid3, 2, 20, header.oh_number,1,0,0)

		end

		if(header.oh_number.eq.000000)
			return

		xcall DISPLAY_TEXT(header_wndid3, 3, 4, "Date:")
		xcall input(header_wndid3, 3, 20, header.oh_date,1,0,1)

		xcall DISPLAY_TEXT(header_wndid3, 4, 4, "Customer:")
		xcall input(header_wndid3, 4, 20, header.oh_customer,1,0,0)

		xcall DISPLAY_TEXT(header_wndid3, 5, 4, "Sales Rep Code:")
		xcall input(header_wndid3, 5, 20, header.oh_salesrep,1,0,0)

		xcall DISPLAY_TEXT(header_wndid3, 6, 4, "Contact:")
		xcall input(header_wndid3, 6, 20, header.oh_contact,1,0,0)

		result = %file_access(FileOp.Create,chn1,header)

		; Call clear box
		for i from 2 thru 6
			begin
				xcall CLEAR_BOX(header_wndid3, i, 20, i, 30)
			end

		begin
			if(nmloaded.ge.nmalloc) ; if need to resize
			begin
				nmalloc += D_INCR_ALLOC ; increment allocated min
				handle = %mem_proc(DM_RESIZ, ^size(strDetail)*nmalloc, handle) ; update handle
			end
			incr nmloaded ; add to currently stored

			; Call the order detail once the header details have been entered
			call ORDER_DETAIL
		end
		
	end
	; Keep accepting new orders until the user enters a blank oh_number (zero: decimal field)
	until(menu.eq.0)

	; Clear the box
	xcall CLEAR_BOX(header_wndid3,4,20,9,60)

	xcall DELETE_WINDOW(header_wndid3)

	return

ORDER_DETAIL,
	; Create a window for the Order Detail
	xcall CREATE_WINDOW(detail_wndid4, "Order Detail", height, width, 9, 30, "Add an Order: Order Details")

	begin
		; Display appropriate prompts for all of the fields in the detail structure
		xcall DISPLAY_TEXT(detail_wndid4, 2, 4, "Order Number: ")
		xcall input(detail_wndid4, 2, 20, ^m(strDetail[nmloaded].od_number, handle),1,0,0)

		xcall DISPLAY_TEXT(detail_wndid4, 3, 4, "Item Number:")
		xcall input(detail_wndid4, 3, 20, ^m(strDetail[nmloaded].od_item, handle),1,0,0)

		xcall DISPLAY_TEXT(detail_wndid4, 4, 4, "Part Number:")
		xcall input(detail_wndid4, 4, 20, 	^m(strDetail[nmloaded].od_part, handle),1,0,0)

		xcall DISPLAY_TEXT(detail_wndid4, 5, 4, "Quantity:")
		xcall input(detail_wndid4, 5, 20, ^m(strDetail[nmloaded].od_qty, handle),1,0,0)

		xcall DISPLAY_TEXT(detail_wndid4, 6, 4, "Unit Price:")
		xcall input(detail_wndid4, 6, 20, ^m(strDetail[nmloaded].od_unit_price, handle),1,0,0)

		; Call clear box
		for i from 2 thru 6
		begin
			xcall CLEAR_BOX(detail_wndid4, i, 20, i, 30)
		end
	end

	return

VIEW_ORDER,
	; Display order header window
	xcall CREATE_WINDOW(header_wndid3,"View Order", height, width, 9, 30, "View Order")
	; Prompt for an order number
	xcall DISPLAY_TEXT(header_wndid3, 2, 4, "Enter Order Num:")
	xcall DISPLAY_TEXT(header_wndid3, 4, 4, "Date:")
	xcall DISPLAY_TEXT(header_wndid3, 5, 4, "Customer:")
	xcall DISPLAY_TEXT(header_wndid3, 6, 4, "Sales Rep Code:")
	xcall DISPLAY_TEXT(header_wndid3, 7, 4, "Contact:")

	repeat
	begin
		xcall input(header_wndid3, 2, 20, oh_number,1,0,0)

		if oh_number.eq.0
			exitloop

		; Look up an order in the ISAM file and display details to window
		if(%file_access(FileOp.ReadNext,chn1,header,oh_number).ne.FileResult.OK) then
			begin
				xcall DISPLAY_TEXT(header_wndid3, 9,4, "No records found!")
				xcall DISPLAY_TEXT(header_wndid3, 10,4, "Enter 0 to return")
			end
		else
		begin
			xcall DISPLAY_TEXT(header_wndid3,4,20,^a(oh_date))
			xcall DISPLAY_TEXT(header_wndid3,5,20,oh_customer)
			xcall DISPLAY_TEXT(header_wndid3,6,20,^a(oh_salesrep))
			xcall DISPLAY_TEXT(header_wndid3,7,20,oh_contact)

			xcall DISPLAY_TEXT(header_wndid3,12,4, "Press any key to continue")

			; Wait for keypress
			xcall WAIT_KEY(header_wndid3,0,1,var_input)

			; Call next function
			call VIEW_ORDER_DETAILS
			; Clear the box
			;xcall CLEAR_BOX(header_wndid3,4,20,9,60)
		end
	end

	xcall DELETE_WINDOW(header_wndid3)
	
	; Loop back and prompt for next order to be displayed (when blank, return to main menu)
	return

VIEW_ORDER_DETAILS,

	;if (%file_access(FileOp.ReadNext,chn2,strDetail[nmloaded],oh_number).ne.FileResult.OK) then
	;	xcall DISPLAY_MESSAGE("No order detail records found!", detail_wndid4, "INVALID", width, col)
	;else

	begin
		; Create and display an order detail window
		xcall CREATE_WINDOW(detail_wndid4,"Detail", height, width, 9, 30, "Order Detail")
		
		; Read all order detail records for the selected order & display each in turn into the window
		xcall DISPLAY_TEXT(detail_wndid4,2,2,"  Part code:")
		xcall DISPLAY_TEXT(detail_wndid4,4,2,"   Quantity:")
		xcall DISPLAY_TEXT(detail_wndid4,5,2,"      Price:")
		; Waiting for key press after each record
		repeat
		begin
			if (%file_access(FileOp.ReadNext,chn2,^m(strDetail[1],handle)).ne.FileResult.OK) then
				exitloop
			else
			begin
				if ^m(strDetail[1].od_number,handle).ne.oh_number then
					exitloop
				else
				begin
					data keyPressed, a1

					xcall DISPLAY_TEXT(detail_wndid4,2,15,^m(strDetail[1].od_part,handle))
					xcall DISPLAY_TEXT(detail_wndid4,4,15,^a(^m(strDetail[1].od_qty,handle)))
					xcall DISPLAY_TEXT(detail_wndid4,5,15,^a(^m(strDetail[1].od_unit_price,handle)))

					xcall DISPLAY_TEXT(detail_wndid4,9,2,"Press RETURN for the next item: ")
					xcall WAIT_KEY(detail_wndid4,0,1,var_input) 

				end
			end
		end
	end

	;xcall delete_window(wndid6)

	return
endmain